def UclAL(a,b):             #Uclid
    i=min(a,b)
    while True:
        if a%i == 0 and b%i == 0:
            return i
        i = i - 1
        return
    
print(UclAL(10,30))


def GCD(a,b):    # 재귀 호출
    print("GCD" , a,b) # 과정 보는거 알지?
    if b == 0:   # 종료 조건 = 필수적이다.
        return a
    return GCD(b, a%b) #return 해주는데 b>a 라는 조건을 가정 하고 구동되는 코드. but b는 결국 a보다 작아지기 때문?

def LCM(a,b):
    print("LCM", a,b)
    return (a*b)//GCD(a,b)
   
print(GCD(4,6))
print(LCM(4,6))


def phi(n): #Fhibonacci 수열.
    if n <=1: #0,1 Def Value 를 사용
        return n
    return phi(n-2) +phi(n-1) ## ㅜ-2 , n-1 맨앞놈+뒷놈

    print(n-2,n-1)
    
print(phi(7))
print(phi(10))

def PP(n): ##phi + for i in range(x)
    if n <= 1:
        return n
    return PP(n-1) + PP(n-2)
    
for i in range(10):
    print(PP(i), end='.')
print(PP(7))
print(PP(10))

def Hanoi_tower(n)  

def hni(n,n1,n2,n3):
    global count
    if n == 1:
        print.count+1(n1,"->",n2)
        return

    hni(n-1, n1,n3,n2)
    print.count+1(n1,"->",n3)
    hni(n-1, n3,n2,n1)


print("n=1")
hni(1,1,3,2)

print("n=2")
hni(2,1,3,2)

print("n=3")
hni(3,1,3,2)
